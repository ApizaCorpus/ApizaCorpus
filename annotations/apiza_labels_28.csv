line,id,speaker,text,ami_label,link,relationship,api_labels,topic,entities
1,0,Programmer,hello,BE-POSITIVE,,,,,
2,1,Apiza,Hello!,BE-POSITIVE,,,,,
3,2,Programmer,How are you?,ELICIT-INFORM,,,,,
4,3,Apiza,"I'm good,",INFORM,,,,,
4,4,Apiza,how about you?,ELICIT-INFORM,,,,,
5,5,Programmer,very well!,INFORM,,,,,
6,6,Programmer,How do you handle keyboard input in Allegro?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
7,7,Apiza,"To get started, you'll probably want to use al_install_keyboard:\n\n",SUGGEST,,,functionality patterns basic,,
7,8,Apiza,bool al_install_keyboard(void)\n\n,INFORM,,,functionality patterns basic,,
7,9,Apiza,Install a keyboard driver. ,INFORM,,,functionality patterns basic,,
7,10,Apiza,"Returns true if successful. If a driver was already installed, nothing happens and true is returned.",INFORM,,,functionality patterns basic,,
8,11,Programmer,what's next?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
9,12,Apiza,You\'ll probably want to look at one of the following events:\n\n,SUGGEST,,,functionality directives structure environment,,
9,13,Apiza,ALLEGRO_EVENT_KEY_DOWN\n\nA keyboard key was pressed.\n\nkeyboard.keycode (int)\nThe code corresponding to the physical key which was pressed. See the Key codes section for the list of ALLEGRO_KEY_* constants.\nkeyboard.display (ALLEGRO_DISPLAY *)\nThe display which had keyboard focus when the event occurred.\n\n,INFORM,,,functionality directives structure environment,,
9,14,Apiza,ALLEGRO_EVENT_KEY_UP\n\nA keyboard key was released.\n\nkeyboard.keycode (int)\nThe code corresponding to the physical key which was released. See the Key codes section for the list of ALLEGRO_KEY_* constants.\nkeyboard.display (ALLEGRO_DISPLAY *)\nThe display which had keyboard focus when the event occurred.\n\n,INFORM,,,functionality directives structure environment,,
9,15,Apiza,"ALLEGRO_EVENT_KEY_CHAR\n\nA character was typed on the keyboard, or a character was auto-repeated.\n\nkeyboard.keycode (int)\nThe code corresponding to the physical key which was last pressed. See the Key codes section for the list of ALLEGRO_KEY_* constants.\nkeyboard.unichar (int)\nA Unicode code point (character). This may be zero or negative if the event was generated for a non-visible ""character"", such as an arrow or Function key. In that case you can act upon the keycode field.\n\nSome special keys will set the unichar field to their standard ASCII values: Tab=9, Return=13, Escape=27. In addition if you press the Control key together with A to Z the unichar field will have the values 1 to 26. For example Ctrl-A will set unichar to 1 and Ctrl-H will set it to 8.\n\nAs of Allegro 5.0.2 there are some inconsistencies in the treatment of Backspace (8 or 127) and Delete (127 or 0) keys on different platforms. These can be worked around by checking the keycode field.\n\nkeyboard.modifiers (unsigned)\nThis is a bitfield of the modifier keys which were pressed when the event occurred. See ""Keyboard modifier flags"" for the constants.\nkeyboard.repeat (bool)\nIndicates if this is a repeated character.\nkeyboard.display (ALLEGRO_DISPLAY *)\nThe display which had keyboard focus when the event occurred.\nNote: in many input methods, characters are not entered one-for-one with physical key presses. Multiple key presses can combine to generate a single character, e.g. apostrophe + e may produce \'Ã©\'. Fewer key presses can also generate more characters, e.g. macro sequences expanding to common phrases.",INFORM,,,functionality directives structure environment,,
10,16,Programmer,how do you handle keyboard events?,ELICIT-OFFER-OR-SUGGESTION,,,control patterns,,
11,17,Apiza,You'll probably want to use al_get_keyboard_event_source:\n\n,SUGGEST,,,functionality control patterns basic,,
11,18,Apiza,ALLEGRO_EVENT_SOURCE *al_get_keyboard_event_source(void)\n\n,INFORM,,,functionality control patterns basic,,
11,19,Apiza,Retrieve the keyboard event source. All keyboard events are generated by this event source.\n\n,INFORM,,,functionality control patterns basic,,
11,20,Apiza,Returns NULL if the keyboard subsystem was not installed.,INFORM,,,functionality control patterns basic,,
12,21,Programmer,how do you check key pressed state,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
13,22,Apiza,You can check that with al_key_down:\n\n,SUGGEST,,,functionality patterns basic,,
13,23,Apiza,"bool al_key_down(const ALLEGRO_KEYBOARD_STATE *state, int keycode)\n\n",INFORM,,,functionality patterns basic,,
13,24,Apiza,Return true if the key specified was held down in the state specified.,INFORM,,,functionality patterns basic,,
14,25,Programmer,how do you use ALLEGRO_KEYBOARD_STATE ?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
15,26,Apiza,What would you like to do with it? ,ELICIT-INFORM,,,functionality structure patterns,,
15,27,Apiza,Here\'s some basic information:\n\n,INFORM,,,functionality structure patterns,,
15,28,Apiza,ALLEGRO_KEYBOARD_STATE\n\ntypedef struct ALLEGRO_KEYBOARD_STATE ALLEGRO_KEYBOARD_STATE;\n\n,INFORM,,,functionality structure patterns,,
15,29,Apiza,"This is a structure that is used to hold a ""snapshot"" of a keyboard\'s state at a particular instant. ",INFORM,,,functionality structure patterns,,
15,30,Apiza,"It contains the following publically readable fields:\n\ndisplay - points to the display that had keyboard focus at the time the state was saved. If no display was focused, this points to NULL.\n",INFORM,,,functionality structure patterns,,
15,31,Apiza,You cannot read the state of keys directly. Use the function al_key_down.,INFORM,,,functionality structure patterns,,
16,32,Programmer,how do you retrieve the current ALLEGRO_KEYBOARD_STATE for the keyboard?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
17,33,Apiza,You can retrieve the keyboard state with al_get_keyboard_state:\n\n,SUGGEST,,,functionality patterns basic,,
17,34,Apiza,void al_get_keyboard_state(ALLEGRO_KEYBOARD_STATE *ret_state)\n\n,INFORM,,,functionality patterns basic,,
17,35,Apiza,Save the state of the keyboard specified at the time the function is called into the structure pointed to by ret_state.,INFORM,,,functionality patterns basic,,
18,36,Programmer,"great,",ASSESS,,,,,
18,37,Programmer, it works,INFORM,,,,,
19,38,Apiza,Great!,BE-POSITIVE,,,,,
20,39,Programmer,how do you play sounds in Allegro,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
21,40,Apiza,You'll probably want to start with al_install_audio:\n\n,SUGGEST,,,patterns basic,,
21,41,Apiza,bool al_install_audio(void)\n\n,INFORM,,,patterns basic,,
21,42,Apiza,Install the audio subsystem.\n\n,INFORM,,,patterns basic,,
21,43,Apiza,"Returns true on success, false on failure.\n\n",INFORM,,,patterns basic,,
21,44,Apiza,Note: most users will call al_reserve_samples and al_init_acodec_addon after this.,INFORM,,,patterns basic,,
22,45,Programmer,describe al_reserve_samples,ELICIT-INFORM,,,basic,,
23,46,Apiza,Here's some information on al_reserve_samples:\n\n,INFORM,,,functionality directives basic,,
23,47,Apiza,bool al_reserve_samples(int reserve_samples)\n\n,INFORM,,,functionality directives basic,,
23,48,Apiza,"Reserves a number of sample instances, attaching them to the default mixer. If no default mixer is set when this function is called, then it will create one and attach it to the default voice. If no default voice has been set, it, too, will be created.\n\nIf you call this function a second time with a smaller number of samples, then the excess internal sample instances will be destroyed causing some sounds to stop and some instances returned by al_lock_sample_id to be invalidated.\n\nThis diagram illustrates the structures that are set up:\n\n sample instance 1\n / sample instance 2\ndefault voice &lt;-- default mixer &lt;--- .\n \\ .\n sample instance N\n",INFORM,,,functionality directives basic,,
23,49,Apiza,"Returns true on success, false on error. ",INFORM,,,functionality directives basic,,
23,50,Apiza,al_install_audio must have been called first.,INFORM,,,functionality directives basic,,
24,51,Programmer,how do you play a single wav file in Allegro?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
25,52,Apiza,You'll probably want to use al_load_sample followed by al_play_sample:\n\n,SUGGEST,,,functionality directives quality patterns basic,,
25,53,Apiza,ALLEGRO_SAMPLE *al_load_sample(const char *filename)\n\n,INFORM,,,functionality directives quality patterns basic,,
25,54,Apiza,"Loads a few different audio file formats based on their extension.\n\nNote that this stores the entire file in memory at once, which may be time consuming. To read the file as it is needed, use al_load_audio_stream.\n\n",INFORM,,,functionality directives quality patterns basic,,
25,55,Apiza,"Returns the sample on success, NULL on failure.\n\n",INFORM,,,functionality directives quality patterns basic,,
25,56,Apiza,"Note: the allegro_audio library does not support any audio file formats by default. You must use the allegro_acodec addon, or register your own format handler.\n\n",INFORM,,,functionality directives quality patterns basic,,
25,57,Apiza,"bool al_play_sample(ALLEGRO_SAMPLE *spl, float gain, float pan, float speed,\n ALLEGRO_PLAYMODE loop, ALLEGRO_SAMPLE_ID *ret_id)\n\n",INFORM,,,functionality directives quality patterns basic,,
25,58,Apiza,Plays a sample on one of the sample instances created by al_reserve_samples.,INFORM,,,functionality directives quality patterns basic,,
25,59,Apiza," Returns true on success, false on failure. ",INFORM,,,functionality directives quality patterns basic,,
25,60,Apiza,Playback may fail because all the reserved sample instances are currently used.\n\n,INFORM,,,functionality directives quality patterns basic,,
25,61,Apiza,"Parameters:\n\ngain - relative volume at which the sample is played; 1.0 is normal.\npan - 0.0 is centred, -1.0 is left, 1.0 is right, or ALLEGRO_AUDIO_PAN_NONE.\nspeed - relative speed at which the sample is played; 1.0 is normal.\nloop - ALLEGRO_PLAYMODE_ONCE, ALLEGRO_PLAYMODE_LOOP, or ALLEGRO_PLAYMODE_BIDIR\nret_id - if non-NULL the variable which this points to will be assigned an id representing the sample being played. If al_play_sample returns false, then the contents of ret_id are invalid and must not be used as argument to other functions.",INFORM,,,functionality directives quality patterns basic,,
26,62,Programmer,how do you get the error message when al_load_sample fails?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
27,63,Programmer,how do you use allegro_acodec to handle .wav audio files?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
28,64,Apiza,Have you called al_init_acodec_addon?\n\n,ELICIT-INFORM,,,functionality directives patterns basic,,
28,65,Apiza,bool al_init_acodec_addon(void)\n\n,INFORM,,,functionality directives patterns basic,,
28,66,Apiza,"This function registers all the known audio file type handlers for al_load_sample, al_save_sample, al_load_audio_stream, etc.\n\nDepending on what libraries are available, the full set of recognised extensions is: .wav, .flac, .ogg, .opus, .it, .mod, .s3m, .xm, .voc.\n\n",INFORM,,,functionality directives patterns basic,,
28,67,Apiza,"Limitations:\n\nSaving is only supported for wav files.\n\nThe wav file loader currently only supports 8/16 bit little endian PCM files. 16 bits are used when saving wav files. Use flac files if more precision is required.\n\nModule files (.it, .mod, .s3m, .xm) are often composed with streaming in mind, and sometimes cannot be easily rendered into a finite length sample. Therefore they cannot be loaded with al_load_sample/al_load_sample_f and must be streamed with al_load_audio_stream or al_load_audio_stream_f.\n\n.voc file streaming is unimplemented.\n\n",INFORM,,,functionality directives patterns basic,,
28,68,Apiza,Return true on success.,INFORM,,,functionality directives patterns basic,,
29,69,Programmer,"ok, ",ASSESS,,,,,
29,70,Programmer,it works,INFORM,,,,,
30,71,Apiza,Great!,BE-POSITIVE,,,,,
31,72,Programmer,how do you draw text with Allegro?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
32,73,Apiza,You'll probably want to start with al_init_font_addon:\n\n,SUGGEST,,,functionality directives patterns environment basic,,
32,74,Apiza,bool al_init_font_addon(void)\n\n,INFORM,,,functionality directives patterns environment basic,,
32,75,Apiza,Initialise the font addon.\n\n,INFORM,,,functionality directives patterns environment basic,,
32,76,Apiza,"Note that if you intend to load bitmap fonts, you will need to initialise allegro_image separately (unless you are using another library to load images).\n\nSimilarly, if you wish to load truetype-fonts, do not forget to also call al_init_ttf_addon.\n\n",INFORM,,,functionality directives patterns environment basic,,
32,77,Apiza,"Returns true on success, false on failure. On the 5.0 branch, this function has no return value. You may wish to avoid checking the return value if your code needs to be compatible with Allegro 5.0. Currently, the function will never return false.",INFORM,,,functionality directives patterns environment basic,,
33,78,Programmer,what's next?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
34,79,Apiza,You'll probably want to use al_load_font to load a font:\n\n,SUGGEST,,,functionality structure patterns basic,,
34,80,Apiza,"ALLEGRO_FONT *al_load_font(char const *filename, int size, int flags)\n\n",INFORM,,,functionality structure patterns basic,,
34,81,Apiza,"Loads a font from disk. This will use al_load_bitmap_font_flags if you pass the name of a known bitmap format, or else al_load_ttf_font.\n\nThe flags parameter is passed through to either of those functions. Bitmap and TTF fonts are also affected by the current bitmap flags at the time the font is loaded.",INFORM,,,functionality structure patterns basic,,
35,82,Programmer,how do you use al_load_ttf_font?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
36,83,Apiza,Here's some information on al_load_ttf_font:\n\n,INFORM,,,functionality patterns environment references basic,,
36,84,Apiza,"ALLEGRO_FONT *al_load_ttf_font(char const *filename, int size, int flags)\n\n",INFORM,,,functionality patterns environment references basic,,
36,85,Apiza,"Loads a TrueType font from a file using the FreeType library. Quoting from the FreeType FAQ this means support for many different font formats:\n\nTrueType, OpenType, Type1, CID, CFF, Windows FON/FNT, X11 PCF, and others\n\nThe size parameter determines the size the font will be rendered at, specified in pixels. The standard font size is measured in units per EM, if you instead want to specify the size as the total height of glyphs in pixels, pass it as a negative value.\n\n",INFORM,,,functionality patterns environment references basic,,
36,86,Apiza,"Note: If you want to display text at multiple sizes, load the font multiple times with different size parameters.\n\n",INFORM,,,functionality patterns environment references basic,,
36,87,Apiza,"The following flags are supported:\n\nALLEGRO_TTF_NO_KERNING - Do not use any kerning even if the font file supports it.\n\nALLEGRO_TTF_MONOCHROME - Load as a monochrome font (which means no anti-aliasing of the font is done).\n\nALLEGRO_TTF_NO_AUTOHINT - Disable the Auto Hinter which is enabled by default in newer versions of FreeType. Since: 5.0.6, 5.1.2",INFORM,,,functionality patterns environment references basic,,
37,88,Programmer,"what's next, to draw text once I have loaded the font?",ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
38,89,Apiza,To draw text you'll probably want to use al_draw_text:\n\n,SUGGEST,,,functionality directives patterns environment basic,,
38,90,Apiza,"void al_draw_text(const ALLEGRO_FONT *font,\n ALLEGRO_COLOR color, float x, float y, int flags,\n char const *text)\n\n",INFORM,,,functionality directives patterns environment basic,,
38,91,Apiza,"Writes the NUL-terminated string text onto the target bitmap at position x, y, using the specified font.\n\n",INFORM,,,functionality directives patterns environment basic,,
38,92,Apiza,"The flags parameter can be 0 or one of the following flags:\n\nALLEGRO_ALIGN_LEFT - Draw the text left-aligned (same as 0).\nALLEGRO_ALIGN_CENTRE - Draw the text centered around the given position.\nALLEGRO_ALIGN_RIGHT - Draw the text right-aligned to the given position.\nIt can also be combined with this flag:\n\nALLEGRO_ALIGN_INTEGER - Always draw text aligned to an integer pixel position. This was formerly the default behaviour. Since: 5.0.8, 5.1.4\n",INFORM,,,functionality directives patterns environment basic,,
38,93,Apiza,"This function does not support newline characters (\\n), but you can use al_draw_multiline_text for multi line text output.",INFORM,,,functionality directives patterns environment basic,,
39,94,Programmer,how do you use ALLEGRO_COLOR?,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
40,95,Apiza,al_map_rgb should allow you to create an ALLEGRO_COLOR:\n\n,SUGGEST,,,functionality directives patterns basic,,
40,96,Apiza,"ALLEGRO_COLOR al_map_rgb(\n unsigned char r, unsigned char g, unsigned char b)\n\n",INFORM,,,functionality directives patterns basic,,
40,97,Apiza,"Convert r, g, b (ranging from 0-255) into an ALLEGRO_COLOR, using 255 for alpha.",INFORM,,,functionality directives patterns basic,,
41,98,Programmer,"why would al_draw_text() produce the warning ""VERR_BUFFER_OVERFLOW""",ELICIT-INFORM,,,functionality purpose,,
42,99,Apiza,It seems like that's most likely a problem with your virtual machine. ,INFORM,,,environment,,
42,100,Apiza,What size display are you using?,ELICIT-INFORM,,,environment,,
43,101,Programmer,"ok,",ASSESS,,,,,
43,102,Programmer,nevermind,SUGGEST,,,,,
44,103,Programmer,What to do if al_draw_text produces no result?,ELICIT-OFFER-OR-SUGGESTION,,,functionality patterns,,
45,104,Programmer,nevermind,SUGGEST,,,,,
46,105,Programmer,"ok,",ASSESS,,,,,
46,106,Programmer,it works,INFORM,,,,,
47,107,Apiza,Great!,BE-POSITIVE,,,,,
48,108,Programmer,how do you load a .png into a bitmap,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
